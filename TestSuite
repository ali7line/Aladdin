#  =============================================================================
#  This C shell file tests ALADDIN's input files.
#
#  Usage : TestInputFile  <optional arguments>
#
#        : For a list of options, type "TestInputFile help"
#
#  Written by: Mark Austin                                             June 1995
#  =============================================================================

echo '>>> TestInputFiles : C shell script to test ALADDIN input files '
echo '>>>                                                             '

# ===========================================================
# Setup looping structure for TestInputFile command arguments
# ===========================================================

if($#argv == 0) then
   set argv = all
endif

set stop = continue
set value = ($argv)
foreach index ($value)

#  ====================
#  List help options
#  ====================

   if($index == help ) then
      echo '>>> Usage is : TestInputFiles <list of options>                '
      echo '>>>                                                            '
      echo '>>> Option           Description of Input Files                '
      echo '>>> ==========================================================='
      echo '>>> help             list of command options                   '
      echo '>>> basic            physical quantities and control structures'
      echo '>>> matrix           matrices                                  '
      echo '>>> algo             basic numerical algorithms                '
      echo '>>> finite           finite element input files                '
      echo '>>> rule             design rule checking                      '
      echo '>>> earthquake       Earthquake Applications                   '
      echo '>>>                                                            '
   endif

#  =========================
#  Execute basic input files
#  =========================

   if($index == all || $index == basic ) then
      echo '>>> Basic Features : physical quantities, control structures etc..'
      echo ''

      echo '>>> [1] : Test Physical Units'
      ALADDIN -f test-files.d/input-basic-units1 >! output-basic-units1
      echo '>>> [2] : Test Variables with Physical Units'
      ALADDIN -f test-files.d/input-basic-units2 >! output-basic-units2
      echo '>>> [3] : Test Conversion of Units'
      ALADDIN -f test-files.d/input-basic-units3 >! output-basic-units3
      echo '>>> [4] : Test Arithmetic and Math Functions'
      ALADDIN -f test-files.d/input-basic-arithmetic >! output-basic-arithmetic
      echo '>>> [5] : Test Logic Operations and Control of Flow'
      ALADDIN -f test-files.d/input-basic-control >! output-basic-control

   endif

#  ==========================
#  Execute matrix input files
#  ==========================

   if($index == all || $index == matrix ) then
      echo '>>> Test Matrix Input Files '
      echo ''

      echo '>>> [1] : Test Matrix Operations without Physical Units'
      ALADDIN -f test-files.d/input-matrix-operations1 >! output-matrix-no-units1
      echo '>>> [2] : Test Matrix Operations with Physical Units'
      ALADDIN -f test-files.d/input-matrix-operations2 >! output-matrix-with-units
      echo '>>> [3] : Test Basic Matrix Equation Solvers'
      ALADDIN -f test-files.d/input-matrix-operations3 >! output-matrix-solver
      echo '>>> [4] : Test Matrix and Quantity Conversions'
      ALADDIN -f test-files.d/input-matrix-operations4 >! output-matrix-conversion
   endif

#  =============================================
#  Execute basic numerical algorithm input files
#  =============================================

   if($index == all || $index == algo ) then
      echo '>>> Test Basic Numerical Algorithms'
      echo ''

      echo '>>> [1] : Test BFGS Algorithm'
      ALADDIN -f test-files.d/input-algo-bfgs  >! output-algo-bfgs
      echo '>>> [2] : Test Han-Powell Optimization Algorithm'
      ALADDIN -f test-files.d/input-algo-han-powell  >! output-algo-han-powell
      echo '>>> [3] : Test Newmark Algorithm (Basic)'
      ALADDIN -f test-files.d/input-algo-newmark  >! output-algo-newmark
      echo '>>> [4] : Test Modal Analysis (Basic)'
      ALADDIN -f test-files.d/input-algo-modal-analysis >! output-algo-modal-analysis

   endif


#  ==================================
#  Execute finite element input files
#  ==================================

   if($index == all || $index == finite ) then
      echo '>>> Test Moment Resistant Frame Input Files'
      echo ''

      echo '>>> [1] : Test Moment Resistant Frame'
      ALADDIN -f test-files.d/input-finite-mrf  >! output-finite-mrf
      echo '>>> [2] : Modal Analysis of Frame subject to El Centro Ground Motion'
      ALADDIN -f test-files.d/input-elcentro >! output-elcentro
      echo '>>> [3] : Test Square Plate (shell elmt with drilling dof)'
      ALADDIN -f test-files.d/input-finite-square-plate >! output-finite-square-plate

   endif

#  ============================================
#  Execute input files for design rule checking
#  ============================================

   if($index == all || $index == rule ) then
      echo '>>> Test Design Rules Files'
      echo ''

      echo '>>> [1] : Test Basic Design Rule Checking'
      ALADDIN -f test-files.d/input-rule >! output-rule

   endif

#  ============================================
#  Execute input files for design rule checking
#  ============================================

   if($index == all || $index == earthquake ) then
      echo '>>> Test Earthquake Analysis/Design Files'
      echo ''

      echo '>>> [1] : Modal Analysis of 3 Story Shear Building'
      ALADDIN -f test-files.d/input-modal-analysis >! output-modal-analysis

   endif

end

echo '>>> End of Test '
